<section class='edit-book_info-container'>

    <div class='edit-book_info-image'>
        <% if @book.cover_image.attached? %>
            <%= image_tag @book.cover_image, alt: "Image of the current book", id: "image-book-replace", onclick: "clickOnFileField();", size: "210x290"  %>
        <% else %>
            <%= image_tag 'placeholder_book_edit_info.svg', id: "image-book-replace", onclick: "clickOnFileField();"  %>
        <% end %>
    </div>

    <div class='edit-book_info-form'>
        <%= form_with(model: @book, local: true, url:update_edit_info_book_path(@book), method: :patch,  class: "book-initial-form") do |f| %>
            <%= render "devise/shared/error_messages", resource: @book %>

            <div class="field">
                <%= f.label :title, class: "book-title-label" %><br />
                <%= f.text_area :title, size: "30x3", class: "title-subtitle-book-textarea" %>
            </div>

            <div class="field">
                <%= f.label :subtitle, class: "book-subtitle-label" %><br />
                <%= f.text_area :subtitle, size: "30x3", class: "title-subtitle-book-textarea" %>
            </div>

            <div class="field book-image-cover-create">
                <%= f.file_field :cover_image, onchange: "previewImage(this, 'image-book-replace');" %><br>
            </div>

            <br />
            <div class="actions">
                <%= f.submit action_name %>
            </div>
            <br />

        <% end %>

    </div>
    <div><%= button_to "Delete book/document", book_path(@book), data: { confirm: "Are you sure?", turbo_confirm: "This is not a destructive action | You will be able to reactivate the book later, just use the filter in your library"}, method: :delete , class: "delete-book-button" %></div>

</section>

<script>
    function clickOnFileField(){
        document.getElementById('book_cover_image').click()
    }

    function previewImage(input, id_img_to_replace){
        if(input.files && input.files[0]){
            const r = new FileReader()
            const file = input.files[0]

            if(!file.type.startsWith('image/')){
                return
            }

            r.onload = function(e) {
                const preview = document.getElementById(id_img_to_replace)
                preview.src = e.target.result
            }

            r.readAsDataURL(file)
        }
    }
</script>